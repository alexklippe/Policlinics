'------------------------------------------------------------------------------
' <auto-generated>
'     Этот код создан программой.
'     Исполняемая версия:4.0.30319.42000
'
'     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
'     повторной генерации кода.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AppointmentDB")>  _
Partial Public Class mainDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Определения метода расширяемости"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSpec_Filial_ID(instance As Spec_Filial_ID)
    End Sub
  Partial Private Sub UpdateSpec_Filial_ID(instance As Spec_Filial_ID)
    End Sub
  Partial Private Sub DeleteSpec_Filial_ID(instance As Spec_Filial_ID)
    End Sub
  Partial Private Sub InsertObrazovanieVracha(instance As ObrazovanieVracha)
    End Sub
  Partial Private Sub UpdateObrazovanieVracha(instance As ObrazovanieVracha)
    End Sub
  Partial Private Sub DeleteObrazovanieVracha(instance As ObrazovanieVracha)
    End Sub
  Partial Private Sub InsertCategoriiVracha(instance As CategoriiVracha)
    End Sub
  Partial Private Sub UpdateCategoriiVracha(instance As CategoriiVracha)
    End Sub
  Partial Private Sub DeleteCategoriiVracha(instance As CategoriiVracha)
    End Sub
  Partial Private Sub InsertRaspisanie(instance As Raspisanie)
    End Sub
  Partial Private Sub UpdateRaspisanie(instance As Raspisanie)
    End Sub
  Partial Private Sub DeleteRaspisanie(instance As Raspisanie)
    End Sub
  Partial Private Sub InsertWorkTimeEndZapisi(instance As WorkTimeEndZapisi)
    End Sub
  Partial Private Sub UpdateWorkTimeEndZapisi(instance As WorkTimeEndZapisi)
    End Sub
  Partial Private Sub DeleteWorkTimeEndZapisi(instance As WorkTimeEndZapisi)
    End Sub
  Partial Private Sub InsertGosHollydays(instance As GosHollydays)
    End Sub
  Partial Private Sub UpdateGosHollydays(instance As GosHollydays)
    End Sub
  Partial Private Sub DeleteGosHollydays(instance As GosHollydays)
    End Sub
  Partial Private Sub InsertSpecialnost(instance As Specialnost)
    End Sub
  Partial Private Sub UpdateSpecialnost(instance As Specialnost)
    End Sub
  Partial Private Sub DeleteSpecialnost(instance As Specialnost)
    End Sub
  Partial Private Sub InsertVrach(instance As Vrach)
    End Sub
  Partial Private Sub UpdateVrach(instance As Vrach)
    End Sub
  Partial Private Sub DeleteVrach(instance As Vrach)
    End Sub
  Partial Private Sub InsertLog(instance As Log)
    End Sub
  Partial Private Sub UpdateLog(instance As Log)
    End Sub
  Partial Private Sub DeleteLog(instance As Log)
    End Sub
  Partial Private Sub InsertOrganization(instance As Organization)
    End Sub
  Partial Private Sub UpdateOrganization(instance As Organization)
    End Sub
  Partial Private Sub DeleteOrganization(instance As Organization)
    End Sub
  Partial Private Sub InsertOrgFilials(instance As OrgFilials)
    End Sub
  Partial Private Sub UpdateOrgFilials(instance As OrgFilials)
    End Sub
  Partial Private Sub DeleteOrgFilials(instance As OrgFilials)
    End Sub
  Partial Private Sub InsertTalons(instance As Talons)
    End Sub
  Partial Private Sub UpdateTalons(instance As Talons)
    End Sub
  Partial Private Sub DeleteTalons(instance As Talons)
    End Sub
  Partial Private Sub InsertVrach_Spec_ID(instance As Vrach_Spec_ID)
    End Sub
  Partial Private Sub UpdateVrach_Spec_ID(instance As Vrach_Spec_ID)
    End Sub
  Partial Private Sub DeleteVrach_Spec_ID(instance As Vrach_Spec_ID)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("DefaultConnection").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Spec_Filial_ID() As System.Data.Linq.Table(Of Spec_Filial_ID)
		Get
			Return Me.GetTable(Of Spec_Filial_ID)
		End Get
	End Property
	
	Public ReadOnly Property ObrazovanieVracha() As System.Data.Linq.Table(Of ObrazovanieVracha)
		Get
			Return Me.GetTable(Of ObrazovanieVracha)
		End Get
	End Property
	
	Public ReadOnly Property CategoriiVracha() As System.Data.Linq.Table(Of CategoriiVracha)
		Get
			Return Me.GetTable(Of CategoriiVracha)
		End Get
	End Property
	
	Public ReadOnly Property Raspisanie() As System.Data.Linq.Table(Of Raspisanie)
		Get
			Return Me.GetTable(Of Raspisanie)
		End Get
	End Property
	
	Public ReadOnly Property SpecNamesWithSpecIds() As System.Data.Linq.Table(Of SpecNamesWithSpecIds)
		Get
			Return Me.GetTable(Of SpecNamesWithSpecIds)
		End Get
	End Property
	
	Public ReadOnly Property ViewIntervalBySpec() As System.Data.Linq.Table(Of ViewIntervalBySpec)
		Get
			Return Me.GetTable(Of ViewIntervalBySpec)
		End Get
	End Property
	
	Public ReadOnly Property WorkTimeEndZapisi() As System.Data.Linq.Table(Of WorkTimeEndZapisi)
		Get
			Return Me.GetTable(Of WorkTimeEndZapisi)
		End Get
	End Property
	
	Public ReadOnly Property GosHollydays() As System.Data.Linq.Table(Of GosHollydays)
		Get
			Return Me.GetTable(Of GosHollydays)
		End Get
	End Property
	
	Public ReadOnly Property Specialnost() As System.Data.Linq.Table(Of Specialnost)
		Get
			Return Me.GetTable(Of Specialnost)
		End Get
	End Property
	
	Public ReadOnly Property Vrach() As System.Data.Linq.Table(Of Vrach)
		Get
			Return Me.GetTable(Of Vrach)
		End Get
	End Property
	
	Public ReadOnly Property Log() As System.Data.Linq.Table(Of Log)
		Get
			Return Me.GetTable(Of Log)
		End Get
	End Property
	
	Public ReadOnly Property ViewByTalonId() As System.Data.Linq.Table(Of ViewByTalonId)
		Get
			Return Me.GetTable(Of ViewByTalonId)
		End Get
	End Property
	
	Public ReadOnly Property ViewTalonsWithVrachAndOrg() As System.Data.Linq.Table(Of ViewTalonsWithVrachAndOrg)
		Get
			Return Me.GetTable(Of ViewTalonsWithVrachAndOrg)
		End Get
	End Property
	
	Public ReadOnly Property Organization() As System.Data.Linq.Table(Of Organization)
		Get
			Return Me.GetTable(Of Organization)
		End Get
	End Property
	
	Public ReadOnly Property OrgFilials() As System.Data.Linq.Table(Of OrgFilials)
		Get
			Return Me.GetTable(Of OrgFilials)
		End Get
	End Property
	
	Public ReadOnly Property Talons() As System.Data.Linq.Table(Of Talons)
		Get
			Return Me.GetTable(Of Talons)
		End Get
	End Property
	
	Public ReadOnly Property Vrach_Spec_ID() As System.Data.Linq.Table(Of Vrach_Spec_ID)
		Get
			Return Me.GetTable(Of Vrach_Spec_ID)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Spec_Filial_ID")>  _
Partial Public Class Spec_Filial_ID
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _IDFilial As Integer
	
	Private _IDSpec As Integer
	
	Private _IDOrg As Integer
	
	Private _Vrach_Spec_ID As EntitySet(Of Vrach_Spec_ID)
	
	Private _Specialnost As EntityRef(Of Specialnost)
	
	Private _OrgFilials As EntityRef(Of OrgFilials)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnIDFilialChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFilialChanged()
    End Sub
    Partial Private Sub OnIDSpecChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSpecChanged()
    End Sub
    Partial Private Sub OnIDOrgChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOrgChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Vrach_Spec_ID = New EntitySet(Of Vrach_Spec_ID)(AddressOf Me.attach_Vrach_Spec_ID, AddressOf Me.detach_Vrach_Spec_ID)
		Me._Specialnost = CType(Nothing, EntityRef(Of Specialnost))
		Me._OrgFilials = CType(Nothing, EntityRef(Of OrgFilials))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFilial", DbType:="Int NOT NULL")>  _
	Public Property IDFilial() As Integer
		Get
			Return Me._IDFilial
		End Get
		Set
			If ((Me._IDFilial = value)  _
						= false) Then
				If Me._OrgFilials.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDFilialChanging(value)
				Me.SendPropertyChanging
				Me._IDFilial = value
				Me.SendPropertyChanged("IDFilial")
				Me.OnIDFilialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSpec", DbType:="Int NOT NULL")>  _
	Public Property IDSpec() As Integer
		Get
			Return Me._IDSpec
		End Get
		Set
			If ((Me._IDSpec = value)  _
						= false) Then
				If Me._Specialnost.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDSpecChanging(value)
				Me.SendPropertyChanging
				Me._IDSpec = value
				Me.SendPropertyChanged("IDSpec")
				Me.OnIDSpecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDOrg", DbType:="Int NOT NULL")>  _
	Public Property IDOrg() As Integer
		Get
			Return Me._IDOrg
		End Get
		Set
			If ((Me._IDOrg = value)  _
						= false) Then
				Me.OnIDOrgChanging(value)
				Me.SendPropertyChanging
				Me._IDOrg = value
				Me.SendPropertyChanged("IDOrg")
				Me.OnIDOrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Spec_Filial_ID_Vrach_Spec_ID", Storage:="_Vrach_Spec_ID", ThisKey:="id", OtherKey:="IDSpec")>  _
	Public Property Vrach_Spec_ID() As EntitySet(Of Vrach_Spec_ID)
		Get
			Return Me._Vrach_Spec_ID
		End Get
		Set
			Me._Vrach_Spec_ID.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Specialnost_Spec_Filial_ID", Storage:="_Specialnost", ThisKey:="IDSpec", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property Specialnost() As Specialnost
		Get
			Return Me._Specialnost.Entity
		End Get
		Set
			Dim previousValue As Specialnost = Me._Specialnost.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Specialnost.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Specialnost.Entity = Nothing
					previousValue.Spec_Filial_ID.Remove(Me)
				End If
				Me._Specialnost.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Spec_Filial_ID.Add(Me)
					Me._IDSpec = value.id
				Else
					Me._IDSpec = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Specialnost")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrgFilials_Spec_Filial_ID", Storage:="_OrgFilials", ThisKey:="IDFilial", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property OrgFilials() As OrgFilials
		Get
			Return Me._OrgFilials.Entity
		End Get
		Set
			Dim previousValue As OrgFilials = Me._OrgFilials.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._OrgFilials.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._OrgFilials.Entity = Nothing
					previousValue.Spec_Filial_ID.Remove(Me)
				End If
				Me._OrgFilials.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Spec_Filial_ID.Add(Me)
					Me._IDFilial = value.id
				Else
					Me._IDFilial = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("OrgFilials")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Vrach_Spec_ID(ByVal entity As Vrach_Spec_ID)
		Me.SendPropertyChanging
		entity.Spec_Filial_ID = Me
	End Sub
	
	Private Sub detach_Vrach_Spec_ID(ByVal entity As Vrach_Spec_ID)
		Me.SendPropertyChanging
		entity.Spec_Filial_ID = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ObrazovanieVracha")>  _
Partial Public Class ObrazovanieVracha
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _Obrazovanie As String
	
	Private _descr As String
	
	Private _Vrach As EntitySet(Of Vrach)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnObrazovanieChanging(value As String)
    End Sub
    Partial Private Sub OnObrazovanieChanged()
    End Sub
    Partial Private Sub OndescrChanging(value As String)
    End Sub
    Partial Private Sub OndescrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Vrach = New EntitySet(Of Vrach)(AddressOf Me.attach_Vrach, AddressOf Me.detach_Vrach)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Obrazovanie", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property Obrazovanie() As String
		Get
			Return Me._Obrazovanie
		End Get
		Set
			If (String.Equals(Me._Obrazovanie, value) = false) Then
				Me.OnObrazovanieChanging(value)
				Me.SendPropertyChanging
				Me._Obrazovanie = value
				Me.SendPropertyChanged("Obrazovanie")
				Me.OnObrazovanieChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descr", DbType:="NVarChar(255)")>  _
	Public Property descr() As String
		Get
			Return Me._descr
		End Get
		Set
			If (String.Equals(Me._descr, value) = false) Then
				Me.OndescrChanging(value)
				Me.SendPropertyChanging
				Me._descr = value
				Me.SendPropertyChanged("descr")
				Me.OndescrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ObrazovanieVracha_Vrach", Storage:="_Vrach", ThisKey:="id", OtherKey:="ProfObrazovanieID")>  _
	Public Property Vrach() As EntitySet(Of Vrach)
		Get
			Return Me._Vrach
		End Get
		Set
			Me._Vrach.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Vrach(ByVal entity As Vrach)
		Me.SendPropertyChanging
		entity.ObrazovanieVracha = Me
	End Sub
	
	Private Sub detach_Vrach(ByVal entity As Vrach)
		Me.SendPropertyChanging
		entity.ObrazovanieVracha = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CategoriiVracha")>  _
Partial Public Class CategoriiVracha
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _CategoryName As String
	
	Private _Vrach As EntitySet(Of Vrach)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnCategoryNameChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Vrach = New EntitySet(Of Vrach)(AddressOf Me.attach_Vrach, AddressOf Me.detach_Vrach)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me.OnCategoryNameChanging(value)
				Me.SendPropertyChanging
				Me._CategoryName = value
				Me.SendPropertyChanged("CategoryName")
				Me.OnCategoryNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CategoriiVracha_Vrach", Storage:="_Vrach", ThisKey:="id", OtherKey:="CategoryVrachaID")>  _
	Public Property Vrach() As EntitySet(Of Vrach)
		Get
			Return Me._Vrach
		End Get
		Set
			Me._Vrach.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Vrach(ByVal entity As Vrach)
		Me.SendPropertyChanging
		entity.CategoriiVracha = Me
	End Sub
	
	Private Sub detach_Vrach(ByVal entity As Vrach)
		Me.SendPropertyChanging
		entity.CategoriiVracha = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Raspisanie")>  _
Partial Public Class Raspisanie
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _ID_SPEC_VRACH As Integer
	
	Private _Status As Short
	
	Private _DatePriem As Date
	
	Private _StartPriem As System.Nullable(Of System.TimeSpan)
	
	Private _EndPriem As System.Nullable(Of System.TimeSpan)
	
	Private _intervalpriema As System.Nullable(Of Integer)
	
	Private _Vrach_Spec_ID As EntityRef(Of Vrach_Spec_ID)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnID_SPEC_VRACHChanging(value As Integer)
    End Sub
    Partial Private Sub OnID_SPEC_VRACHChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Short)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnDatePriemChanging(value As Date)
    End Sub
    Partial Private Sub OnDatePriemChanged()
    End Sub
    Partial Private Sub OnStartPriemChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnStartPriemChanged()
    End Sub
    Partial Private Sub OnEndPriemChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnEndPriemChanged()
    End Sub
    Partial Private Sub OnintervalpriemaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnintervalpriemaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Vrach_Spec_ID = CType(Nothing, EntityRef(Of Vrach_Spec_ID))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_SPEC_VRACH", DbType:="Int NOT NULL")>  _
	Public Property ID_SPEC_VRACH() As Integer
		Get
			Return Me._ID_SPEC_VRACH
		End Get
		Set
			If ((Me._ID_SPEC_VRACH = value)  _
						= false) Then
				If Me._Vrach_Spec_ID.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnID_SPEC_VRACHChanging(value)
				Me.SendPropertyChanging
				Me._ID_SPEC_VRACH = value
				Me.SendPropertyChanged("ID_SPEC_VRACH")
				Me.OnID_SPEC_VRACHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="SmallInt NOT NULL")>  _
	Public Property Status() As Short
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatePriem", DbType:="Date NOT NULL")>  _
	Public Property DatePriem() As Date
		Get
			Return Me._DatePriem
		End Get
		Set
			If ((Me._DatePriem = value)  _
						= false) Then
				Me.OnDatePriemChanging(value)
				Me.SendPropertyChanging
				Me._DatePriem = value
				Me.SendPropertyChanged("DatePriem")
				Me.OnDatePriemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartPriem", DbType:="Time")>  _
	Public Property StartPriem() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._StartPriem
		End Get
		Set
			If (Me._StartPriem.Equals(value) = false) Then
				Me.OnStartPriemChanging(value)
				Me.SendPropertyChanging
				Me._StartPriem = value
				Me.SendPropertyChanged("StartPriem")
				Me.OnStartPriemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndPriem", DbType:="Time")>  _
	Public Property EndPriem() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._EndPriem
		End Get
		Set
			If (Me._EndPriem.Equals(value) = false) Then
				Me.OnEndPriemChanging(value)
				Me.SendPropertyChanging
				Me._EndPriem = value
				Me.SendPropertyChanged("EndPriem")
				Me.OnEndPriemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intervalpriema", DbType:="Int")>  _
	Public Property intervalpriema() As System.Nullable(Of Integer)
		Get
			Return Me._intervalpriema
		End Get
		Set
			If (Me._intervalpriema.Equals(value) = false) Then
				Me.OnintervalpriemaChanging(value)
				Me.SendPropertyChanging
				Me._intervalpriema = value
				Me.SendPropertyChanged("intervalpriema")
				Me.OnintervalpriemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vrach_Spec_ID_Raspisanie", Storage:="_Vrach_Spec_ID", ThisKey:="ID_SPEC_VRACH", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property Vrach_Spec_ID() As Vrach_Spec_ID
		Get
			Return Me._Vrach_Spec_ID.Entity
		End Get
		Set
			Dim previousValue As Vrach_Spec_ID = Me._Vrach_Spec_ID.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Vrach_Spec_ID.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Vrach_Spec_ID.Entity = Nothing
					previousValue.Raspisanie.Remove(Me)
				End If
				Me._Vrach_Spec_ID.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Raspisanie.Add(Me)
					Me._ID_SPEC_VRACH = value.id
				Else
					Me._ID_SPEC_VRACH = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Vrach_Spec_ID")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SpecNamesWithSpecIds")>  _
Partial Public Class SpecNamesWithSpecIds
	
	Private _id As Integer
	
	Private _IDFilial As Integer
	
	Private _IDSpec As Integer
	
	Private _IDOrg As Integer
	
	Private _SpecialnostName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", DbType:="Int NOT NULL")>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me._id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFilial", DbType:="Int NOT NULL")>  _
	Public Property IDFilial() As Integer
		Get
			Return Me._IDFilial
		End Get
		Set
			If ((Me._IDFilial = value)  _
						= false) Then
				Me._IDFilial = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSpec", DbType:="Int NOT NULL")>  _
	Public Property IDSpec() As Integer
		Get
			Return Me._IDSpec
		End Get
		Set
			If ((Me._IDSpec = value)  _
						= false) Then
				Me._IDSpec = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDOrg", DbType:="Int NOT NULL")>  _
	Public Property IDOrg() As Integer
		Get
			Return Me._IDOrg
		End Get
		Set
			If ((Me._IDOrg = value)  _
						= false) Then
				Me._IDOrg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialnostName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property SpecialnostName() As String
		Get
			Return Me._SpecialnostName
		End Get
		Set
			If (String.Equals(Me._SpecialnostName, value) = false) Then
				Me._SpecialnostName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ViewIntervalBySpec")>  _
Partial Public Class ViewIntervalBySpec
	
	Private _IntervalPriemaByDefault As System.Nullable(Of Integer)
	
	Private _id As Integer
	
	Private _SpecialnostName As String
	
	Private _IDSpec As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IntervalPriemaByDefault", DbType:="Int")>  _
	Public Property IntervalPriemaByDefault() As System.Nullable(Of Integer)
		Get
			Return Me._IntervalPriemaByDefault
		End Get
		Set
			If (Me._IntervalPriemaByDefault.Equals(value) = false) Then
				Me._IntervalPriemaByDefault = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", DbType:="Int NOT NULL")>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me._id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialnostName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property SpecialnostName() As String
		Get
			Return Me._SpecialnostName
		End Get
		Set
			If (String.Equals(Me._SpecialnostName, value) = false) Then
				Me._SpecialnostName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSpec", DbType:="Int NOT NULL")>  _
	Public Property IDSpec() As Integer
		Get
			Return Me._IDSpec
		End Get
		Set
			If ((Me._IDSpec = value)  _
						= false) Then
				Me._IDSpec = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WorkTimeEndZapisi")>  _
Partial Public Class WorkTimeEndZapisi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _idFilial As Integer
	
	Private _DayOfWeek As Short
	
	Private _EndWorkTime As System.Nullable(Of System.TimeSpan)
	
	Private _IsWorkDay As Boolean
	
	Private _OrgFilials As EntityRef(Of OrgFilials)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnidFilialChanging(value As Integer)
    End Sub
    Partial Private Sub OnidFilialChanged()
    End Sub
    Partial Private Sub OnDayOfWeekChanging(value As Short)
    End Sub
    Partial Private Sub OnDayOfWeekChanged()
    End Sub
    Partial Private Sub OnEndWorkTimeChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnEndWorkTimeChanged()
    End Sub
    Partial Private Sub OnIsWorkDayChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsWorkDayChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OrgFilials = CType(Nothing, EntityRef(Of OrgFilials))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idFilial", DbType:="Int NOT NULL")>  _
	Public Property idFilial() As Integer
		Get
			Return Me._idFilial
		End Get
		Set
			If ((Me._idFilial = value)  _
						= false) Then
				If Me._OrgFilials.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnidFilialChanging(value)
				Me.SendPropertyChanging
				Me._idFilial = value
				Me.SendPropertyChanged("idFilial")
				Me.OnidFilialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DayOfWeek", DbType:="SmallInt NOT NULL")>  _
	Public Property DayOfWeek() As Short
		Get
			Return Me._DayOfWeek
		End Get
		Set
			If ((Me._DayOfWeek = value)  _
						= false) Then
				Me.OnDayOfWeekChanging(value)
				Me.SendPropertyChanging
				Me._DayOfWeek = value
				Me.SendPropertyChanged("DayOfWeek")
				Me.OnDayOfWeekChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndWorkTime", DbType:="Time")>  _
	Public Property EndWorkTime() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._EndWorkTime
		End Get
		Set
			If (Me._EndWorkTime.Equals(value) = false) Then
				Me.OnEndWorkTimeChanging(value)
				Me.SendPropertyChanging
				Me._EndWorkTime = value
				Me.SendPropertyChanged("EndWorkTime")
				Me.OnEndWorkTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsWorkDay", DbType:="Bit NOT NULL")>  _
	Public Property IsWorkDay() As Boolean
		Get
			Return Me._IsWorkDay
		End Get
		Set
			If ((Me._IsWorkDay = value)  _
						= false) Then
				Me.OnIsWorkDayChanging(value)
				Me.SendPropertyChanging
				Me._IsWorkDay = value
				Me.SendPropertyChanged("IsWorkDay")
				Me.OnIsWorkDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrgFilials_WorkTimeEndZapisi", Storage:="_OrgFilials", ThisKey:="idFilial", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property OrgFilials() As OrgFilials
		Get
			Return Me._OrgFilials.Entity
		End Get
		Set
			Dim previousValue As OrgFilials = Me._OrgFilials.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._OrgFilials.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._OrgFilials.Entity = Nothing
					previousValue.WorkTimeEndZapisi.Remove(Me)
				End If
				Me._OrgFilials.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WorkTimeEndZapisi.Add(Me)
					Me._idFilial = value.id
				Else
					Me._idFilial = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("OrgFilials")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GosHollydays")>  _
Partial Public Class GosHollydays
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _date As Date
	
	Private _descr As String
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OndateChanging(value As Date)
    End Sub
    Partial Private Sub OndateChanged()
    End Sub
    Partial Private Sub OndescrChanging(value As String)
    End Sub
    Partial Private Sub OndescrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="date", Storage:="_date", DbType:="Date NOT NULL")>  _
	Public Property [date]() As Date
		Get
			Return Me._date
		End Get
		Set
			If ((Me._date = value)  _
						= false) Then
				Me.OndateChanging(value)
				Me.SendPropertyChanging
				Me._date = value
				Me.SendPropertyChanged("[date]")
				Me.OndateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descr", DbType:="NVarChar(400)")>  _
	Public Property descr() As String
		Get
			Return Me._descr
		End Get
		Set
			If (String.Equals(Me._descr, value) = false) Then
				Me.OndescrChanging(value)
				Me.SendPropertyChanging
				Me._descr = value
				Me.SendPropertyChanged("descr")
				Me.OndescrChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Specialnost")>  _
Partial Public Class Specialnost
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _SpecialnostName As String
	
	Private _SpecialnostDescr As String
	
	Private _SpecFilID As System.Nullable(Of Integer)
	
	Private _IntervalPriemaByDefault As System.Nullable(Of Integer)
	
	Private _IdOrg As System.Nullable(Of Integer)
	
	Private _Spec_Filial_ID As EntitySet(Of Spec_Filial_ID)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnSpecialnostNameChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialnostNameChanged()
    End Sub
    Partial Private Sub OnSpecialnostDescrChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialnostDescrChanged()
    End Sub
    Partial Private Sub OnSpecFilIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSpecFilIDChanged()
    End Sub
    Partial Private Sub OnIntervalPriemaByDefaultChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIntervalPriemaByDefaultChanged()
    End Sub
    Partial Private Sub OnIdOrgChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdOrgChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Spec_Filial_ID = New EntitySet(Of Spec_Filial_ID)(AddressOf Me.attach_Spec_Filial_ID, AddressOf Me.detach_Spec_Filial_ID)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialnostName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property SpecialnostName() As String
		Get
			Return Me._SpecialnostName
		End Get
		Set
			If (String.Equals(Me._SpecialnostName, value) = false) Then
				Me.OnSpecialnostNameChanging(value)
				Me.SendPropertyChanging
				Me._SpecialnostName = value
				Me.SendPropertyChanged("SpecialnostName")
				Me.OnSpecialnostNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialnostDescr", DbType:="NVarChar(255)")>  _
	Public Property SpecialnostDescr() As String
		Get
			Return Me._SpecialnostDescr
		End Get
		Set
			If (String.Equals(Me._SpecialnostDescr, value) = false) Then
				Me.OnSpecialnostDescrChanging(value)
				Me.SendPropertyChanging
				Me._SpecialnostDescr = value
				Me.SendPropertyChanged("SpecialnostDescr")
				Me.OnSpecialnostDescrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecFilID", DbType:="Int")>  _
	Public Property SpecFilID() As System.Nullable(Of Integer)
		Get
			Return Me._SpecFilID
		End Get
		Set
			If (Me._SpecFilID.Equals(value) = false) Then
				Me.OnSpecFilIDChanging(value)
				Me.SendPropertyChanging
				Me._SpecFilID = value
				Me.SendPropertyChanged("SpecFilID")
				Me.OnSpecFilIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IntervalPriemaByDefault", DbType:="Int")>  _
	Public Property IntervalPriemaByDefault() As System.Nullable(Of Integer)
		Get
			Return Me._IntervalPriemaByDefault
		End Get
		Set
			If (Me._IntervalPriemaByDefault.Equals(value) = false) Then
				Me.OnIntervalPriemaByDefaultChanging(value)
				Me.SendPropertyChanging
				Me._IntervalPriemaByDefault = value
				Me.SendPropertyChanged("IntervalPriemaByDefault")
				Me.OnIntervalPriemaByDefaultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdOrg", DbType:="Int")>  _
	Public Property IdOrg() As System.Nullable(Of Integer)
		Get
			Return Me._IdOrg
		End Get
		Set
			If (Me._IdOrg.Equals(value) = false) Then
				Me.OnIdOrgChanging(value)
				Me.SendPropertyChanging
				Me._IdOrg = value
				Me.SendPropertyChanged("IdOrg")
				Me.OnIdOrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Specialnost_Spec_Filial_ID", Storage:="_Spec_Filial_ID", ThisKey:="id", OtherKey:="IDSpec")>  _
	Public Property Spec_Filial_ID() As EntitySet(Of Spec_Filial_ID)
		Get
			Return Me._Spec_Filial_ID
		End Get
		Set
			Me._Spec_Filial_ID.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Spec_Filial_ID(ByVal entity As Spec_Filial_ID)
		Me.SendPropertyChanging
		entity.Specialnost = Me
	End Sub
	
	Private Sub detach_Spec_Filial_ID(ByVal entity As Spec_Filial_ID)
		Me.SendPropertyChanging
		entity.Specialnost = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vrach")>  _
Partial Public Class Vrach
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _Surname As String
	
	Private _Name As String
	
	Private _MidName As String
	
	Private _TabelNumber As System.Nullable(Of Integer)
	
	Private _ProfObrazovanieID As System.Nullable(Of Integer)
	
	Private _Certification As String
	
	Private _CategoryVrachaID As System.Nullable(Of Integer)
	
	Private _Fired As System.Nullable(Of Boolean)
	
	Private _BirthDay As System.Nullable(Of Date)
	
	Private _ObrUchr As String
	
	Private _PovyshKvalif As String
	
	Private _IdOrg As System.Nullable(Of Integer)
	
	Private _Vrach_Spec_ID As EntitySet(Of Vrach_Spec_ID)
	
	Private _CategoriiVracha As EntityRef(Of CategoriiVracha)
	
	Private _ObrazovanieVracha As EntityRef(Of ObrazovanieVracha)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnSurnameChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnMidNameChanging(value As String)
    End Sub
    Partial Private Sub OnMidNameChanged()
    End Sub
    Partial Private Sub OnTabelNumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTabelNumberChanged()
    End Sub
    Partial Private Sub OnProfObrazovanieIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProfObrazovanieIDChanged()
    End Sub
    Partial Private Sub OnCertificationChanging(value As String)
    End Sub
    Partial Private Sub OnCertificationChanged()
    End Sub
    Partial Private Sub OnCategoryVrachaIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCategoryVrachaIDChanged()
    End Sub
    Partial Private Sub OnFiredChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFiredChanged()
    End Sub
    Partial Private Sub OnBirthDayChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBirthDayChanged()
    End Sub
    Partial Private Sub OnObrUchrChanging(value As String)
    End Sub
    Partial Private Sub OnObrUchrChanged()
    End Sub
    Partial Private Sub OnPovyshKvalifChanging(value As String)
    End Sub
    Partial Private Sub OnPovyshKvalifChanged()
    End Sub
    Partial Private Sub OnIdOrgChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdOrgChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Vrach_Spec_ID = New EntitySet(Of Vrach_Spec_ID)(AddressOf Me.attach_Vrach_Spec_ID, AddressOf Me.detach_Vrach_Spec_ID)
		Me._CategoriiVracha = CType(Nothing, EntityRef(Of CategoriiVracha))
		Me._ObrazovanieVracha = CType(Nothing, EntityRef(Of ObrazovanieVracha))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Surname() As String
		Get
			Return Me._Surname
		End Get
		Set
			If (String.Equals(Me._Surname, value) = false) Then
				Me.OnSurnameChanging(value)
				Me.SendPropertyChanging
				Me._Surname = value
				Me.SendPropertyChanged("Surname")
				Me.OnSurnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MidName", DbType:="NVarChar(50)")>  _
	Public Property MidName() As String
		Get
			Return Me._MidName
		End Get
		Set
			If (String.Equals(Me._MidName, value) = false) Then
				Me.OnMidNameChanging(value)
				Me.SendPropertyChanging
				Me._MidName = value
				Me.SendPropertyChanged("MidName")
				Me.OnMidNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabelNumber", DbType:="Int")>  _
	Public Property TabelNumber() As System.Nullable(Of Integer)
		Get
			Return Me._TabelNumber
		End Get
		Set
			If (Me._TabelNumber.Equals(value) = false) Then
				Me.OnTabelNumberChanging(value)
				Me.SendPropertyChanging
				Me._TabelNumber = value
				Me.SendPropertyChanged("TabelNumber")
				Me.OnTabelNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfObrazovanieID", DbType:="Int")>  _
	Public Property ProfObrazovanieID() As System.Nullable(Of Integer)
		Get
			Return Me._ProfObrazovanieID
		End Get
		Set
			If (Me._ProfObrazovanieID.Equals(value) = false) Then
				If Me._ObrazovanieVracha.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnProfObrazovanieIDChanging(value)
				Me.SendPropertyChanging
				Me._ProfObrazovanieID = value
				Me.SendPropertyChanged("ProfObrazovanieID")
				Me.OnProfObrazovanieIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certification", DbType:="NVarChar(255)")>  _
	Public Property Certification() As String
		Get
			Return Me._Certification
		End Get
		Set
			If (String.Equals(Me._Certification, value) = false) Then
				Me.OnCertificationChanging(value)
				Me.SendPropertyChanging
				Me._Certification = value
				Me.SendPropertyChanged("Certification")
				Me.OnCertificationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryVrachaID", DbType:="Int")>  _
	Public Property CategoryVrachaID() As System.Nullable(Of Integer)
		Get
			Return Me._CategoryVrachaID
		End Get
		Set
			If (Me._CategoryVrachaID.Equals(value) = false) Then
				If Me._CategoriiVracha.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCategoryVrachaIDChanging(value)
				Me.SendPropertyChanging
				Me._CategoryVrachaID = value
				Me.SendPropertyChanged("CategoryVrachaID")
				Me.OnCategoryVrachaIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fired", DbType:="Bit")>  _
	Public Property Fired() As System.Nullable(Of Boolean)
		Get
			Return Me._Fired
		End Get
		Set
			If (Me._Fired.Equals(value) = false) Then
				Me.OnFiredChanging(value)
				Me.SendPropertyChanging
				Me._Fired = value
				Me.SendPropertyChanged("Fired")
				Me.OnFiredChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDay", DbType:="Date")>  _
	Public Property BirthDay() As System.Nullable(Of Date)
		Get
			Return Me._BirthDay
		End Get
		Set
			If (Me._BirthDay.Equals(value) = false) Then
				Me.OnBirthDayChanging(value)
				Me.SendPropertyChanging
				Me._BirthDay = value
				Me.SendPropertyChanged("BirthDay")
				Me.OnBirthDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObrUchr", DbType:="NVarChar(255)")>  _
	Public Property ObrUchr() As String
		Get
			Return Me._ObrUchr
		End Get
		Set
			If (String.Equals(Me._ObrUchr, value) = false) Then
				Me.OnObrUchrChanging(value)
				Me.SendPropertyChanging
				Me._ObrUchr = value
				Me.SendPropertyChanged("ObrUchr")
				Me.OnObrUchrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PovyshKvalif", DbType:="NVarChar(400)")>  _
	Public Property PovyshKvalif() As String
		Get
			Return Me._PovyshKvalif
		End Get
		Set
			If (String.Equals(Me._PovyshKvalif, value) = false) Then
				Me.OnPovyshKvalifChanging(value)
				Me.SendPropertyChanging
				Me._PovyshKvalif = value
				Me.SendPropertyChanged("PovyshKvalif")
				Me.OnPovyshKvalifChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdOrg", DbType:="Int")>  _
	Public Property IdOrg() As System.Nullable(Of Integer)
		Get
			Return Me._IdOrg
		End Get
		Set
			If (Me._IdOrg.Equals(value) = false) Then
				Me.OnIdOrgChanging(value)
				Me.SendPropertyChanging
				Me._IdOrg = value
				Me.SendPropertyChanged("IdOrg")
				Me.OnIdOrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vrach_Vrach_Spec_ID", Storage:="_Vrach_Spec_ID", ThisKey:="id", OtherKey:="IDVrach")>  _
	Public Property Vrach_Spec_ID() As EntitySet(Of Vrach_Spec_ID)
		Get
			Return Me._Vrach_Spec_ID
		End Get
		Set
			Me._Vrach_Spec_ID.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CategoriiVracha_Vrach", Storage:="_CategoriiVracha", ThisKey:="CategoryVrachaID", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property CategoriiVracha() As CategoriiVracha
		Get
			Return Me._CategoriiVracha.Entity
		End Get
		Set
			Dim previousValue As CategoriiVracha = Me._CategoriiVracha.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CategoriiVracha.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CategoriiVracha.Entity = Nothing
					previousValue.Vrach.Remove(Me)
				End If
				Me._CategoriiVracha.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Vrach.Add(Me)
					Me._CategoryVrachaID = value.id
				Else
					Me._CategoryVrachaID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("CategoriiVracha")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ObrazovanieVracha_Vrach", Storage:="_ObrazovanieVracha", ThisKey:="ProfObrazovanieID", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property ObrazovanieVracha() As ObrazovanieVracha
		Get
			Return Me._ObrazovanieVracha.Entity
		End Get
		Set
			Dim previousValue As ObrazovanieVracha = Me._ObrazovanieVracha.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ObrazovanieVracha.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ObrazovanieVracha.Entity = Nothing
					previousValue.Vrach.Remove(Me)
				End If
				Me._ObrazovanieVracha.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Vrach.Add(Me)
					Me._ProfObrazovanieID = value.id
				Else
					Me._ProfObrazovanieID = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ObrazovanieVracha")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Vrach_Spec_ID(ByVal entity As Vrach_Spec_ID)
		Me.SendPropertyChanging
		entity.Vrach = Me
	End Sub
	
	Private Sub detach_Vrach_Spec_ID(ByVal entity As Vrach_Spec_ID)
		Me.SendPropertyChanging
		entity.Vrach = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Log]")>  _
Partial Public Class Log
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _Title As String
	
	Private _Text As String
	
	Private _code As System.Nullable(Of Integer)
	
	Private _idOrg As System.Nullable(Of Integer)
	
	Private _Site As String
	
	Private _DateTime As System.Nullable(Of Date)
	
	Private _ClientIPAddress As String
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnTextChanging(value As String)
    End Sub
    Partial Private Sub OnTextChanged()
    End Sub
    Partial Private Sub OncodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncodeChanged()
    End Sub
    Partial Private Sub OnidOrgChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnidOrgChanged()
    End Sub
    Partial Private Sub OnSiteChanging(value As String)
    End Sub
    Partial Private Sub OnSiteChanged()
    End Sub
    Partial Private Sub OnDateTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateTimeChanged()
    End Sub
    Partial Private Sub OnClientIPAddressChanging(value As String)
    End Sub
    Partial Private Sub OnClientIPAddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(100)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Text", DbType:="NVarChar(255)")>  _
	Public Property Text() As String
		Get
			Return Me._Text
		End Get
		Set
			If (String.Equals(Me._Text, value) = false) Then
				Me.OnTextChanging(value)
				Me.SendPropertyChanging
				Me._Text = value
				Me.SendPropertyChanged("Text")
				Me.OnTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_code", DbType:="Int")>  _
	Public Property code() As System.Nullable(Of Integer)
		Get
			Return Me._code
		End Get
		Set
			If (Me._code.Equals(value) = false) Then
				Me.OncodeChanging(value)
				Me.SendPropertyChanging
				Me._code = value
				Me.SendPropertyChanged("code")
				Me.OncodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idOrg", DbType:="Int")>  _
	Public Property idOrg() As System.Nullable(Of Integer)
		Get
			Return Me._idOrg
		End Get
		Set
			If (Me._idOrg.Equals(value) = false) Then
				Me.OnidOrgChanging(value)
				Me.SendPropertyChanging
				Me._idOrg = value
				Me.SendPropertyChanged("idOrg")
				Me.OnidOrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Site", DbType:="NVarChar(200)")>  _
	Public Property Site() As String
		Get
			Return Me._Site
		End Get
		Set
			If (String.Equals(Me._Site, value) = false) Then
				Me.OnSiteChanging(value)
				Me.SendPropertyChanging
				Me._Site = value
				Me.SendPropertyChanged("Site")
				Me.OnSiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTime", DbType:="DateTime")>  _
	Public Property DateTime() As System.Nullable(Of Date)
		Get
			Return Me._DateTime
		End Get
		Set
			If (Me._DateTime.Equals(value) = false) Then
				Me.OnDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._DateTime = value
				Me.SendPropertyChanged("DateTime")
				Me.OnDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientIPAddress", DbType:="NVarChar(70)")>  _
	Public Property ClientIPAddress() As String
		Get
			Return Me._ClientIPAddress
		End Get
		Set
			If (String.Equals(Me._ClientIPAddress, value) = false) Then
				Me.OnClientIPAddressChanging(value)
				Me.SendPropertyChanging
				Me._ClientIPAddress = value
				Me.SendPropertyChanged("ClientIPAddress")
				Me.OnClientIPAddressChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ViewByTalonId")>  _
Partial Public Class ViewByTalonId
	
	Private _id As Integer
	
	Private _DateTimePriem As System.Nullable(Of Date)
	
	Private _status As Short
	
	Private _ReservedTill As System.Nullable(Of Date)
	
	Private _Surname As String
	
	Private _Name As String
	
	Private _MidName As String
	
	Private _Certification As String
	
	Private _Obrazovanie As String
	
	Private _CategoryName As String
	
	Private _SpecialnostName As String
	
	Private _filialName As String
	
	Private _filialAddress As String
	
	Private _OrgFullName As String
	
	Private _VrachSpecID As Integer
	
	Private _OrgId As Integer
	
	Private _OrgDomainName As String
	
	Private _OrgTestDomainName As String
	
	Private _filialEmail As String
	
	Private _Accepted As System.Nullable(Of Short)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", DbType:="Int NOT NULL")>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me._id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTimePriem", DbType:="DateTime")>  _
	Public Property DateTimePriem() As System.Nullable(Of Date)
		Get
			Return Me._DateTimePriem
		End Get
		Set
			If (Me._DateTimePriem.Equals(value) = false) Then
				Me._DateTimePriem = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="SmallInt NOT NULL")>  _
	Public Property status() As Short
		Get
			Return Me._status
		End Get
		Set
			If ((Me._status = value)  _
						= false) Then
				Me._status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReservedTill", DbType:="DateTime")>  _
	Public Property ReservedTill() As System.Nullable(Of Date)
		Get
			Return Me._ReservedTill
		End Get
		Set
			If (Me._ReservedTill.Equals(value) = false) Then
				Me._ReservedTill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Surname() As String
		Get
			Return Me._Surname
		End Get
		Set
			If (String.Equals(Me._Surname, value) = false) Then
				Me._Surname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MidName", DbType:="NVarChar(50)")>  _
	Public Property MidName() As String
		Get
			Return Me._MidName
		End Get
		Set
			If (String.Equals(Me._MidName, value) = false) Then
				Me._MidName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certification", DbType:="NVarChar(255)")>  _
	Public Property Certification() As String
		Get
			Return Me._Certification
		End Get
		Set
			If (String.Equals(Me._Certification, value) = false) Then
				Me._Certification = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Obrazovanie", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property Obrazovanie() As String
		Get
			Return Me._Obrazovanie
		End Get
		Set
			If (String.Equals(Me._Obrazovanie, value) = false) Then
				Me._Obrazovanie = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialnostName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property SpecialnostName() As String
		Get
			Return Me._SpecialnostName
		End Get
		Set
			If (String.Equals(Me._SpecialnostName, value) = false) Then
				Me._SpecialnostName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property filialName() As String
		Get
			Return Me._filialName
		End Get
		Set
			If (String.Equals(Me._filialName, value) = false) Then
				Me._filialName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialAddress", DbType:="NVarChar(400)")>  _
	Public Property filialAddress() As String
		Get
			Return Me._filialAddress
		End Get
		Set
			If (String.Equals(Me._filialAddress, value) = false) Then
				Me._filialAddress = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgFullName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property OrgFullName() As String
		Get
			Return Me._OrgFullName
		End Get
		Set
			If (String.Equals(Me._OrgFullName, value) = false) Then
				Me._OrgFullName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VrachSpecID", DbType:="Int NOT NULL")>  _
	Public Property VrachSpecID() As Integer
		Get
			Return Me._VrachSpecID
		End Get
		Set
			If ((Me._VrachSpecID = value)  _
						= false) Then
				Me._VrachSpecID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgId", DbType:="Int NOT NULL")>  _
	Public Property OrgId() As Integer
		Get
			Return Me._OrgId
		End Get
		Set
			If ((Me._OrgId = value)  _
						= false) Then
				Me._OrgId = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgDomainName", DbType:="NVarChar(255)")>  _
	Public Property OrgDomainName() As String
		Get
			Return Me._OrgDomainName
		End Get
		Set
			If (String.Equals(Me._OrgDomainName, value) = false) Then
				Me._OrgDomainName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgTestDomainName", DbType:="NVarChar(255)")>  _
	Public Property OrgTestDomainName() As String
		Get
			Return Me._OrgTestDomainName
		End Get
		Set
			If (String.Equals(Me._OrgTestDomainName, value) = false) Then
				Me._OrgTestDomainName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialEmail", DbType:="NVarChar(255)")>  _
	Public Property filialEmail() As String
		Get
			Return Me._filialEmail
		End Get
		Set
			If (String.Equals(Me._filialEmail, value) = false) Then
				Me._filialEmail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accepted", DbType:="SmallInt")>  _
	Public Property Accepted() As System.Nullable(Of Short)
		Get
			Return Me._Accepted
		End Get
		Set
			If (Me._Accepted.Equals(value) = false) Then
				Me._Accepted = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ViewTalonsWithVrachAndOrg")>  _
Partial Public Class ViewTalonsWithVrachAndOrg
	
	Private _SpecialnostName As String
	
	Private _Surname As String
	
	Private _Name As String
	
	Private _MidName As String
	
	Private _IDOrg As Integer
	
	Private _VrachSpecId As Integer
	
	Private _id As Integer
	
	Private _VrachSpec_ID As Integer
	
	Private _DateTimePriem As System.Nullable(Of Date)
	
	Private _status As Short
	
	Private _ReservedTill As System.Nullable(Of Date)
	
	Private _ClientSurname As String
	
	Private _ClientName As String
	
	Private _ClientMidname As String
	
	Private _ClientSex As System.Nullable(Of Boolean)
	
	Private _ClientBirthday As System.Nullable(Of Date)
	
	Private _ClientEmail As String
	
	Private _ClientPhone As String
	
	Private _ClientAddress As String
	
	Private _ClientPolisNum As String
	
	Private _ClientPolisOrg As String
	
	Private _DateTimeZapisi As System.Nullable(Of Date)
	
	Private _ClientKarta As System.Nullable(Of Short)
	
	Private _Accepted As System.Nullable(Of Short)
	
	Private _AcceptedDateTime As System.Nullable(Of Date)
	
	Private _AcceptedText As String
	
	Private _MessageToClientSent As System.Nullable(Of Boolean)
	
	Private _RNDCode As String
	
	Private _IDFilial As Integer
	
	Private _filialName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialnostName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property SpecialnostName() As String
		Get
			Return Me._SpecialnostName
		End Get
		Set
			If (String.Equals(Me._SpecialnostName, value) = false) Then
				Me._SpecialnostName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Surname", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Surname() As String
		Get
			Return Me._Surname
		End Get
		Set
			If (String.Equals(Me._Surname, value) = false) Then
				Me._Surname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MidName", DbType:="NVarChar(50)")>  _
	Public Property MidName() As String
		Get
			Return Me._MidName
		End Get
		Set
			If (String.Equals(Me._MidName, value) = false) Then
				Me._MidName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDOrg", DbType:="Int NOT NULL")>  _
	Public Property IDOrg() As Integer
		Get
			Return Me._IDOrg
		End Get
		Set
			If ((Me._IDOrg = value)  _
						= false) Then
				Me._IDOrg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VrachSpecId", DbType:="Int NOT NULL")>  _
	Public Property VrachSpecId() As Integer
		Get
			Return Me._VrachSpecId
		End Get
		Set
			If ((Me._VrachSpecId = value)  _
						= false) Then
				Me._VrachSpecId = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", DbType:="Int NOT NULL")>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me._id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VrachSpec_ID", DbType:="Int NOT NULL")>  _
	Public Property VrachSpec_ID() As Integer
		Get
			Return Me._VrachSpec_ID
		End Get
		Set
			If ((Me._VrachSpec_ID = value)  _
						= false) Then
				Me._VrachSpec_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTimePriem", DbType:="DateTime")>  _
	Public Property DateTimePriem() As System.Nullable(Of Date)
		Get
			Return Me._DateTimePriem
		End Get
		Set
			If (Me._DateTimePriem.Equals(value) = false) Then
				Me._DateTimePriem = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="SmallInt NOT NULL")>  _
	Public Property status() As Short
		Get
			Return Me._status
		End Get
		Set
			If ((Me._status = value)  _
						= false) Then
				Me._status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReservedTill", DbType:="DateTime")>  _
	Public Property ReservedTill() As System.Nullable(Of Date)
		Get
			Return Me._ReservedTill
		End Get
		Set
			If (Me._ReservedTill.Equals(value) = false) Then
				Me._ReservedTill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientSurname", DbType:="NVarChar(255)")>  _
	Public Property ClientSurname() As String
		Get
			Return Me._ClientSurname
		End Get
		Set
			If (String.Equals(Me._ClientSurname, value) = false) Then
				Me._ClientSurname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientName", DbType:="NVarChar(255)")>  _
	Public Property ClientName() As String
		Get
			Return Me._ClientName
		End Get
		Set
			If (String.Equals(Me._ClientName, value) = false) Then
				Me._ClientName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientMidname", DbType:="NVarChar(255)")>  _
	Public Property ClientMidname() As String
		Get
			Return Me._ClientMidname
		End Get
		Set
			If (String.Equals(Me._ClientMidname, value) = false) Then
				Me._ClientMidname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientSex", DbType:="Bit")>  _
	Public Property ClientSex() As System.Nullable(Of Boolean)
		Get
			Return Me._ClientSex
		End Get
		Set
			If (Me._ClientSex.Equals(value) = false) Then
				Me._ClientSex = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientBirthday", DbType:="Date")>  _
	Public Property ClientBirthday() As System.Nullable(Of Date)
		Get
			Return Me._ClientBirthday
		End Get
		Set
			If (Me._ClientBirthday.Equals(value) = false) Then
				Me._ClientBirthday = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientEmail", DbType:="NVarChar(255)")>  _
	Public Property ClientEmail() As String
		Get
			Return Me._ClientEmail
		End Get
		Set
			If (String.Equals(Me._ClientEmail, value) = false) Then
				Me._ClientEmail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientPhone", DbType:="NVarChar(100)")>  _
	Public Property ClientPhone() As String
		Get
			Return Me._ClientPhone
		End Get
		Set
			If (String.Equals(Me._ClientPhone, value) = false) Then
				Me._ClientPhone = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientAddress", DbType:="NVarChar(400)")>  _
	Public Property ClientAddress() As String
		Get
			Return Me._ClientAddress
		End Get
		Set
			If (String.Equals(Me._ClientAddress, value) = false) Then
				Me._ClientAddress = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientPolisNum", DbType:="NVarChar(30)")>  _
	Public Property ClientPolisNum() As String
		Get
			Return Me._ClientPolisNum
		End Get
		Set
			If (String.Equals(Me._ClientPolisNum, value) = false) Then
				Me._ClientPolisNum = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientPolisOrg", DbType:="NVarChar(255)")>  _
	Public Property ClientPolisOrg() As String
		Get
			Return Me._ClientPolisOrg
		End Get
		Set
			If (String.Equals(Me._ClientPolisOrg, value) = false) Then
				Me._ClientPolisOrg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTimeZapisi", DbType:="DateTime")>  _
	Public Property DateTimeZapisi() As System.Nullable(Of Date)
		Get
			Return Me._DateTimeZapisi
		End Get
		Set
			If (Me._DateTimeZapisi.Equals(value) = false) Then
				Me._DateTimeZapisi = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientKarta", DbType:="SmallInt")>  _
	Public Property ClientKarta() As System.Nullable(Of Short)
		Get
			Return Me._ClientKarta
		End Get
		Set
			If (Me._ClientKarta.Equals(value) = false) Then
				Me._ClientKarta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accepted", DbType:="SmallInt")>  _
	Public Property Accepted() As System.Nullable(Of Short)
		Get
			Return Me._Accepted
		End Get
		Set
			If (Me._Accepted.Equals(value) = false) Then
				Me._Accepted = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcceptedDateTime", DbType:="DateTime")>  _
	Public Property AcceptedDateTime() As System.Nullable(Of Date)
		Get
			Return Me._AcceptedDateTime
		End Get
		Set
			If (Me._AcceptedDateTime.Equals(value) = false) Then
				Me._AcceptedDateTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcceptedText", DbType:="NVarChar(1000)")>  _
	Public Property AcceptedText() As String
		Get
			Return Me._AcceptedText
		End Get
		Set
			If (String.Equals(Me._AcceptedText, value) = false) Then
				Me._AcceptedText = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MessageToClientSent", DbType:="Bit")>  _
	Public Property MessageToClientSent() As System.Nullable(Of Boolean)
		Get
			Return Me._MessageToClientSent
		End Get
		Set
			If (Me._MessageToClientSent.Equals(value) = false) Then
				Me._MessageToClientSent = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RNDCode", DbType:="NVarChar(6)")>  _
	Public Property RNDCode() As String
		Get
			Return Me._RNDCode
		End Get
		Set
			If (String.Equals(Me._RNDCode, value) = false) Then
				Me._RNDCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDFilial", DbType:="Int NOT NULL")>  _
	Public Property IDFilial() As Integer
		Get
			Return Me._IDFilial
		End Get
		Set
			If ((Me._IDFilial = value)  _
						= false) Then
				Me._IDFilial = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property filialName() As String
		Get
			Return Me._filialName
		End Get
		Set
			If (String.Equals(Me._filialName, value) = false) Then
				Me._filialName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Organization")>  _
Partial Public Class Organization
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _OrgShortName As String
	
	Private _OrgFullName As String
	
	Private _OrgINN As String
	
	Private _OrgOGRN As String
	
	Private _OrgAddress As String
	
	Private _OrgHelpTel As String
	
	Private _OrgDomainName As String
	
	Private _OrgTestDomainName As String
	
	Private _SMTPServer As String
	
	Private _SMTPPort As System.Nullable(Of Integer)
	
	Private _SMTPLogin As String
	
	Private _SMTPPass As String
	
	Private _SMTPMailFrom As String
	
	Private _SMTPMailToDefault As String
	
	Private _SMTPSSL As System.Nullable(Of Boolean)
	
	Private _OrgClaimFormAddress As String
	
	Private _OrgFilials As EntitySet(Of OrgFilials)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnOrgShortNameChanging(value As String)
    End Sub
    Partial Private Sub OnOrgShortNameChanged()
    End Sub
    Partial Private Sub OnOrgFullNameChanging(value As String)
    End Sub
    Partial Private Sub OnOrgFullNameChanged()
    End Sub
    Partial Private Sub OnOrgINNChanging(value As String)
    End Sub
    Partial Private Sub OnOrgINNChanged()
    End Sub
    Partial Private Sub OnOrgOGRNChanging(value As String)
    End Sub
    Partial Private Sub OnOrgOGRNChanged()
    End Sub
    Partial Private Sub OnOrgAddressChanging(value As String)
    End Sub
    Partial Private Sub OnOrgAddressChanged()
    End Sub
    Partial Private Sub OnOrgHelpTelChanging(value As String)
    End Sub
    Partial Private Sub OnOrgHelpTelChanged()
    End Sub
    Partial Private Sub OnOrgDomainNameChanging(value As String)
    End Sub
    Partial Private Sub OnOrgDomainNameChanged()
    End Sub
    Partial Private Sub OnOrgTestDomainNameChanging(value As String)
    End Sub
    Partial Private Sub OnOrgTestDomainNameChanged()
    End Sub
    Partial Private Sub OnSMTPServerChanging(value As String)
    End Sub
    Partial Private Sub OnSMTPServerChanged()
    End Sub
    Partial Private Sub OnSMTPPortChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSMTPPortChanged()
    End Sub
    Partial Private Sub OnSMTPLoginChanging(value As String)
    End Sub
    Partial Private Sub OnSMTPLoginChanged()
    End Sub
    Partial Private Sub OnSMTPPassChanging(value As String)
    End Sub
    Partial Private Sub OnSMTPPassChanged()
    End Sub
    Partial Private Sub OnSMTPMailFromChanging(value As String)
    End Sub
    Partial Private Sub OnSMTPMailFromChanged()
    End Sub
    Partial Private Sub OnSMTPMailToDefaultChanging(value As String)
    End Sub
    Partial Private Sub OnSMTPMailToDefaultChanged()
    End Sub
    Partial Private Sub OnSMTPSSLChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSMTPSSLChanged()
    End Sub
    Partial Private Sub OnOrgClaimFormAddressChanging(value As String)
    End Sub
    Partial Private Sub OnOrgClaimFormAddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OrgFilials = New EntitySet(Of OrgFilials)(AddressOf Me.attach_OrgFilials, AddressOf Me.detach_OrgFilials)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgShortName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property OrgShortName() As String
		Get
			Return Me._OrgShortName
		End Get
		Set
			If (String.Equals(Me._OrgShortName, value) = false) Then
				Me.OnOrgShortNameChanging(value)
				Me.SendPropertyChanging
				Me._OrgShortName = value
				Me.SendPropertyChanged("OrgShortName")
				Me.OnOrgShortNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgFullName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property OrgFullName() As String
		Get
			Return Me._OrgFullName
		End Get
		Set
			If (String.Equals(Me._OrgFullName, value) = false) Then
				Me.OnOrgFullNameChanging(value)
				Me.SendPropertyChanging
				Me._OrgFullName = value
				Me.SendPropertyChanged("OrgFullName")
				Me.OnOrgFullNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgINN", DbType:="NVarChar(12)")>  _
	Public Property OrgINN() As String
		Get
			Return Me._OrgINN
		End Get
		Set
			If (String.Equals(Me._OrgINN, value) = false) Then
				Me.OnOrgINNChanging(value)
				Me.SendPropertyChanging
				Me._OrgINN = value
				Me.SendPropertyChanged("OrgINN")
				Me.OnOrgINNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgOGRN", DbType:="NVarChar(15)")>  _
	Public Property OrgOGRN() As String
		Get
			Return Me._OrgOGRN
		End Get
		Set
			If (String.Equals(Me._OrgOGRN, value) = false) Then
				Me.OnOrgOGRNChanging(value)
				Me.SendPropertyChanging
				Me._OrgOGRN = value
				Me.SendPropertyChanged("OrgOGRN")
				Me.OnOrgOGRNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgAddress", DbType:="NVarChar(400)")>  _
	Public Property OrgAddress() As String
		Get
			Return Me._OrgAddress
		End Get
		Set
			If (String.Equals(Me._OrgAddress, value) = false) Then
				Me.OnOrgAddressChanging(value)
				Me.SendPropertyChanging
				Me._OrgAddress = value
				Me.SendPropertyChanged("OrgAddress")
				Me.OnOrgAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgHelpTel", DbType:="NVarChar(30)")>  _
	Public Property OrgHelpTel() As String
		Get
			Return Me._OrgHelpTel
		End Get
		Set
			If (String.Equals(Me._OrgHelpTel, value) = false) Then
				Me.OnOrgHelpTelChanging(value)
				Me.SendPropertyChanging
				Me._OrgHelpTel = value
				Me.SendPropertyChanged("OrgHelpTel")
				Me.OnOrgHelpTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgDomainName", DbType:="NVarChar(255)")>  _
	Public Property OrgDomainName() As String
		Get
			Return Me._OrgDomainName
		End Get
		Set
			If (String.Equals(Me._OrgDomainName, value) = false) Then
				Me.OnOrgDomainNameChanging(value)
				Me.SendPropertyChanging
				Me._OrgDomainName = value
				Me.SendPropertyChanged("OrgDomainName")
				Me.OnOrgDomainNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgTestDomainName", DbType:="NVarChar(255)")>  _
	Public Property OrgTestDomainName() As String
		Get
			Return Me._OrgTestDomainName
		End Get
		Set
			If (String.Equals(Me._OrgTestDomainName, value) = false) Then
				Me.OnOrgTestDomainNameChanging(value)
				Me.SendPropertyChanging
				Me._OrgTestDomainName = value
				Me.SendPropertyChanged("OrgTestDomainName")
				Me.OnOrgTestDomainNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTPServer", DbType:="NVarChar(255)")>  _
	Public Property SMTPServer() As String
		Get
			Return Me._SMTPServer
		End Get
		Set
			If (String.Equals(Me._SMTPServer, value) = false) Then
				Me.OnSMTPServerChanging(value)
				Me.SendPropertyChanging
				Me._SMTPServer = value
				Me.SendPropertyChanged("SMTPServer")
				Me.OnSMTPServerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTPPort", DbType:="Int")>  _
	Public Property SMTPPort() As System.Nullable(Of Integer)
		Get
			Return Me._SMTPPort
		End Get
		Set
			If (Me._SMTPPort.Equals(value) = false) Then
				Me.OnSMTPPortChanging(value)
				Me.SendPropertyChanging
				Me._SMTPPort = value
				Me.SendPropertyChanged("SMTPPort")
				Me.OnSMTPPortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTPLogin", DbType:="NVarChar(255)")>  _
	Public Property SMTPLogin() As String
		Get
			Return Me._SMTPLogin
		End Get
		Set
			If (String.Equals(Me._SMTPLogin, value) = false) Then
				Me.OnSMTPLoginChanging(value)
				Me.SendPropertyChanging
				Me._SMTPLogin = value
				Me.SendPropertyChanged("SMTPLogin")
				Me.OnSMTPLoginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTPPass", DbType:="NVarChar(255)")>  _
	Public Property SMTPPass() As String
		Get
			Return Me._SMTPPass
		End Get
		Set
			If (String.Equals(Me._SMTPPass, value) = false) Then
				Me.OnSMTPPassChanging(value)
				Me.SendPropertyChanging
				Me._SMTPPass = value
				Me.SendPropertyChanged("SMTPPass")
				Me.OnSMTPPassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTPMailFrom", DbType:="NVarChar(255)")>  _
	Public Property SMTPMailFrom() As String
		Get
			Return Me._SMTPMailFrom
		End Get
		Set
			If (String.Equals(Me._SMTPMailFrom, value) = false) Then
				Me.OnSMTPMailFromChanging(value)
				Me.SendPropertyChanging
				Me._SMTPMailFrom = value
				Me.SendPropertyChanged("SMTPMailFrom")
				Me.OnSMTPMailFromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTPMailToDefault", DbType:="NVarChar(255)")>  _
	Public Property SMTPMailToDefault() As String
		Get
			Return Me._SMTPMailToDefault
		End Get
		Set
			If (String.Equals(Me._SMTPMailToDefault, value) = false) Then
				Me.OnSMTPMailToDefaultChanging(value)
				Me.SendPropertyChanging
				Me._SMTPMailToDefault = value
				Me.SendPropertyChanged("SMTPMailToDefault")
				Me.OnSMTPMailToDefaultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTPSSL", DbType:="Bit")>  _
	Public Property SMTPSSL() As System.Nullable(Of Boolean)
		Get
			Return Me._SMTPSSL
		End Get
		Set
			If (Me._SMTPSSL.Equals(value) = false) Then
				Me.OnSMTPSSLChanging(value)
				Me.SendPropertyChanging
				Me._SMTPSSL = value
				Me.SendPropertyChanged("SMTPSSL")
				Me.OnSMTPSSLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrgClaimFormAddress", DbType:="NVarChar(255)")>  _
	Public Property OrgClaimFormAddress() As String
		Get
			Return Me._OrgClaimFormAddress
		End Get
		Set
			If (String.Equals(Me._OrgClaimFormAddress, value) = false) Then
				Me.OnOrgClaimFormAddressChanging(value)
				Me.SendPropertyChanging
				Me._OrgClaimFormAddress = value
				Me.SendPropertyChanged("OrgClaimFormAddress")
				Me.OnOrgClaimFormAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Organization_OrgFilials", Storage:="_OrgFilials", ThisKey:="id", OtherKey:="idOrganization")>  _
	Public Property OrgFilials() As EntitySet(Of OrgFilials)
		Get
			Return Me._OrgFilials
		End Get
		Set
			Me._OrgFilials.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_OrgFilials(ByVal entity As OrgFilials)
		Me.SendPropertyChanging
		entity.Organization = Me
	End Sub
	
	Private Sub detach_OrgFilials(ByVal entity As OrgFilials)
		Me.SendPropertyChanging
		entity.Organization = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrgFilials")>  _
Partial Public Class OrgFilials
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _FilialNumber As Integer
	
	Private _filialName As String
	
	Private _filialHelpTel As String
	
	Private _filialAddress As String
	
	Private _filialDescription As String
	
	Private _idOrganization As System.Nullable(Of Integer)
	
	Private _filialEmail As String
	
	Private _FilialRegPhone As String
	
	Private _Spec_Filial_ID As EntitySet(Of Spec_Filial_ID)
	
	Private _WorkTimeEndZapisi As EntitySet(Of WorkTimeEndZapisi)
	
	Private _Organization As EntityRef(Of Organization)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnFilialNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnFilialNumberChanged()
    End Sub
    Partial Private Sub OnfilialNameChanging(value As String)
    End Sub
    Partial Private Sub OnfilialNameChanged()
    End Sub
    Partial Private Sub OnfilialHelpTelChanging(value As String)
    End Sub
    Partial Private Sub OnfilialHelpTelChanged()
    End Sub
    Partial Private Sub OnfilialAddressChanging(value As String)
    End Sub
    Partial Private Sub OnfilialAddressChanged()
    End Sub
    Partial Private Sub OnfilialDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnfilialDescriptionChanged()
    End Sub
    Partial Private Sub OnidOrganizationChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnidOrganizationChanged()
    End Sub
    Partial Private Sub OnfilialEmailChanging(value As String)
    End Sub
    Partial Private Sub OnfilialEmailChanged()
    End Sub
    Partial Private Sub OnFilialRegPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnFilialRegPhoneChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Spec_Filial_ID = New EntitySet(Of Spec_Filial_ID)(AddressOf Me.attach_Spec_Filial_ID, AddressOf Me.detach_Spec_Filial_ID)
		Me._WorkTimeEndZapisi = New EntitySet(Of WorkTimeEndZapisi)(AddressOf Me.attach_WorkTimeEndZapisi, AddressOf Me.detach_WorkTimeEndZapisi)
		Me._Organization = CType(Nothing, EntityRef(Of Organization))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilialNumber", DbType:="Int NOT NULL")>  _
	Public Property FilialNumber() As Integer
		Get
			Return Me._FilialNumber
		End Get
		Set
			If ((Me._FilialNumber = value)  _
						= false) Then
				Me.OnFilialNumberChanging(value)
				Me.SendPropertyChanging
				Me._FilialNumber = value
				Me.SendPropertyChanged("FilialNumber")
				Me.OnFilialNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialName", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property filialName() As String
		Get
			Return Me._filialName
		End Get
		Set
			If (String.Equals(Me._filialName, value) = false) Then
				Me.OnfilialNameChanging(value)
				Me.SendPropertyChanging
				Me._filialName = value
				Me.SendPropertyChanged("filialName")
				Me.OnfilialNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialHelpTel", DbType:="NVarChar(50)")>  _
	Public Property filialHelpTel() As String
		Get
			Return Me._filialHelpTel
		End Get
		Set
			If (String.Equals(Me._filialHelpTel, value) = false) Then
				Me.OnfilialHelpTelChanging(value)
				Me.SendPropertyChanging
				Me._filialHelpTel = value
				Me.SendPropertyChanged("filialHelpTel")
				Me.OnfilialHelpTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialAddress", DbType:="NVarChar(400)")>  _
	Public Property filialAddress() As String
		Get
			Return Me._filialAddress
		End Get
		Set
			If (String.Equals(Me._filialAddress, value) = false) Then
				Me.OnfilialAddressChanging(value)
				Me.SendPropertyChanging
				Me._filialAddress = value
				Me.SendPropertyChanged("filialAddress")
				Me.OnfilialAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialDescription", DbType:="NVarChar(250)")>  _
	Public Property filialDescription() As String
		Get
			Return Me._filialDescription
		End Get
		Set
			If (String.Equals(Me._filialDescription, value) = false) Then
				Me.OnfilialDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._filialDescription = value
				Me.SendPropertyChanged("filialDescription")
				Me.OnfilialDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idOrganization", DbType:="Int")>  _
	Public Property idOrganization() As System.Nullable(Of Integer)
		Get
			Return Me._idOrganization
		End Get
		Set
			If (Me._idOrganization.Equals(value) = false) Then
				If Me._Organization.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnidOrganizationChanging(value)
				Me.SendPropertyChanging
				Me._idOrganization = value
				Me.SendPropertyChanged("idOrganization")
				Me.OnidOrganizationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filialEmail", DbType:="NVarChar(255)")>  _
	Public Property filialEmail() As String
		Get
			Return Me._filialEmail
		End Get
		Set
			If (String.Equals(Me._filialEmail, value) = false) Then
				Me.OnfilialEmailChanging(value)
				Me.SendPropertyChanging
				Me._filialEmail = value
				Me.SendPropertyChanged("filialEmail")
				Me.OnfilialEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilialRegPhone", DbType:="NVarChar(255)")>  _
	Public Property FilialRegPhone() As String
		Get
			Return Me._FilialRegPhone
		End Get
		Set
			If (String.Equals(Me._FilialRegPhone, value) = false) Then
				Me.OnFilialRegPhoneChanging(value)
				Me.SendPropertyChanging
				Me._FilialRegPhone = value
				Me.SendPropertyChanged("FilialRegPhone")
				Me.OnFilialRegPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrgFilials_Spec_Filial_ID", Storage:="_Spec_Filial_ID", ThisKey:="id", OtherKey:="IDFilial")>  _
	Public Property Spec_Filial_ID() As EntitySet(Of Spec_Filial_ID)
		Get
			Return Me._Spec_Filial_ID
		End Get
		Set
			Me._Spec_Filial_ID.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrgFilials_WorkTimeEndZapisi", Storage:="_WorkTimeEndZapisi", ThisKey:="id", OtherKey:="idFilial")>  _
	Public Property WorkTimeEndZapisi() As EntitySet(Of WorkTimeEndZapisi)
		Get
			Return Me._WorkTimeEndZapisi
		End Get
		Set
			Me._WorkTimeEndZapisi.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Organization_OrgFilials", Storage:="_Organization", ThisKey:="idOrganization", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property Organization() As Organization
		Get
			Return Me._Organization.Entity
		End Get
		Set
			Dim previousValue As Organization = Me._Organization.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Organization.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Organization.Entity = Nothing
					previousValue.OrgFilials.Remove(Me)
				End If
				Me._Organization.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.OrgFilials.Add(Me)
					Me._idOrganization = value.id
				Else
					Me._idOrganization = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Organization")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Spec_Filial_ID(ByVal entity As Spec_Filial_ID)
		Me.SendPropertyChanging
		entity.OrgFilials = Me
	End Sub
	
	Private Sub detach_Spec_Filial_ID(ByVal entity As Spec_Filial_ID)
		Me.SendPropertyChanging
		entity.OrgFilials = Nothing
	End Sub
	
	Private Sub attach_WorkTimeEndZapisi(ByVal entity As WorkTimeEndZapisi)
		Me.SendPropertyChanging
		entity.OrgFilials = Me
	End Sub
	
	Private Sub detach_WorkTimeEndZapisi(ByVal entity As WorkTimeEndZapisi)
		Me.SendPropertyChanging
		entity.OrgFilials = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Talons")>  _
Partial Public Class Talons
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _VrachSpec_ID As Integer
	
	Private _DateTimePriem As System.Nullable(Of Date)
	
	Private _status As Short
	
	Private _ReservedTill As System.Nullable(Of Date)
	
	Private _ClientSurname As String
	
	Private _ClientName As String
	
	Private _ClientMidname As String
	
	Private _ClientSex As System.Nullable(Of Boolean)
	
	Private _ClientBirthday As System.Nullable(Of Date)
	
	Private _ClientEmail As String
	
	Private _ClientPhone As String
	
	Private _ClientAddress As String
	
	Private _ClientPolisNum As String
	
	Private _ClientPolisOrg As String
	
	Private _DateTimeZapisi As System.Nullable(Of Date)
	
	Private _ClientKarta As System.Nullable(Of Short)
	
	Private _Accepted As System.Nullable(Of Short)
	
	Private _AcceptedDateTime As System.Nullable(Of Date)
	
	Private _AcceptedText As String
	
	Private _MessageToClientSent As System.Nullable(Of Boolean)
	
	Private _RNDCode As String
	
	Private _UsedWCGAInt As System.Nullable(Of Boolean)
	
	Private _UsedWCGAColourScheme As System.Nullable(Of Integer)
	
	Private _history As String
	
	Private _Vrach_Spec_ID As EntityRef(Of Vrach_Spec_ID)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnVrachSpec_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnVrachSpec_IDChanged()
    End Sub
    Partial Private Sub OnDateTimePriemChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateTimePriemChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As Short)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub OnReservedTillChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReservedTillChanged()
    End Sub
    Partial Private Sub OnClientSurnameChanging(value As String)
    End Sub
    Partial Private Sub OnClientSurnameChanged()
    End Sub
    Partial Private Sub OnClientNameChanging(value As String)
    End Sub
    Partial Private Sub OnClientNameChanged()
    End Sub
    Partial Private Sub OnClientMidnameChanging(value As String)
    End Sub
    Partial Private Sub OnClientMidnameChanged()
    End Sub
    Partial Private Sub OnClientSexChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnClientSexChanged()
    End Sub
    Partial Private Sub OnClientBirthdayChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnClientBirthdayChanged()
    End Sub
    Partial Private Sub OnClientEmailChanging(value As String)
    End Sub
    Partial Private Sub OnClientEmailChanged()
    End Sub
    Partial Private Sub OnClientPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnClientPhoneChanged()
    End Sub
    Partial Private Sub OnClientAddressChanging(value As String)
    End Sub
    Partial Private Sub OnClientAddressChanged()
    End Sub
    Partial Private Sub OnClientPolisNumChanging(value As String)
    End Sub
    Partial Private Sub OnClientPolisNumChanged()
    End Sub
    Partial Private Sub OnClientPolisOrgChanging(value As String)
    End Sub
    Partial Private Sub OnClientPolisOrgChanged()
    End Sub
    Partial Private Sub OnDateTimeZapisiChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateTimeZapisiChanged()
    End Sub
    Partial Private Sub OnClientKartaChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnClientKartaChanged()
    End Sub
    Partial Private Sub OnAcceptedChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnAcceptedChanged()
    End Sub
    Partial Private Sub OnAcceptedDateTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAcceptedDateTimeChanged()
    End Sub
    Partial Private Sub OnAcceptedTextChanging(value As String)
    End Sub
    Partial Private Sub OnAcceptedTextChanged()
    End Sub
    Partial Private Sub OnMessageToClientSentChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMessageToClientSentChanged()
    End Sub
    Partial Private Sub OnRNDCodeChanging(value As String)
    End Sub
    Partial Private Sub OnRNDCodeChanged()
    End Sub
    Partial Private Sub OnUsedWCGAIntChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsedWCGAIntChanged()
    End Sub
    Partial Private Sub OnUsedWCGAColourSchemeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUsedWCGAColourSchemeChanged()
    End Sub
    Partial Private Sub OnhistoryChanging(value As String)
    End Sub
    Partial Private Sub OnhistoryChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Vrach_Spec_ID = CType(Nothing, EntityRef(Of Vrach_Spec_ID))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VrachSpec_ID", DbType:="Int NOT NULL")>  _
	Public Property VrachSpec_ID() As Integer
		Get
			Return Me._VrachSpec_ID
		End Get
		Set
			If ((Me._VrachSpec_ID = value)  _
						= false) Then
				If Me._Vrach_Spec_ID.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnVrachSpec_IDChanging(value)
				Me.SendPropertyChanging
				Me._VrachSpec_ID = value
				Me.SendPropertyChanged("VrachSpec_ID")
				Me.OnVrachSpec_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTimePriem", DbType:="DateTime")>  _
	Public Property DateTimePriem() As System.Nullable(Of Date)
		Get
			Return Me._DateTimePriem
		End Get
		Set
			If (Me._DateTimePriem.Equals(value) = false) Then
				Me.OnDateTimePriemChanging(value)
				Me.SendPropertyChanging
				Me._DateTimePriem = value
				Me.SendPropertyChanged("DateTimePriem")
				Me.OnDateTimePriemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="SmallInt NOT NULL")>  _
	Public Property status() As Short
		Get
			Return Me._status
		End Get
		Set
			If ((Me._status = value)  _
						= false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReservedTill", DbType:="DateTime")>  _
	Public Property ReservedTill() As System.Nullable(Of Date)
		Get
			Return Me._ReservedTill
		End Get
		Set
			If (Me._ReservedTill.Equals(value) = false) Then
				Me.OnReservedTillChanging(value)
				Me.SendPropertyChanging
				Me._ReservedTill = value
				Me.SendPropertyChanged("ReservedTill")
				Me.OnReservedTillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientSurname", DbType:="NVarChar(255)")>  _
	Public Property ClientSurname() As String
		Get
			Return Me._ClientSurname
		End Get
		Set
			If (String.Equals(Me._ClientSurname, value) = false) Then
				Me.OnClientSurnameChanging(value)
				Me.SendPropertyChanging
				Me._ClientSurname = value
				Me.SendPropertyChanged("ClientSurname")
				Me.OnClientSurnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientName", DbType:="NVarChar(255)")>  _
	Public Property ClientName() As String
		Get
			Return Me._ClientName
		End Get
		Set
			If (String.Equals(Me._ClientName, value) = false) Then
				Me.OnClientNameChanging(value)
				Me.SendPropertyChanging
				Me._ClientName = value
				Me.SendPropertyChanged("ClientName")
				Me.OnClientNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientMidname", DbType:="NVarChar(255)")>  _
	Public Property ClientMidname() As String
		Get
			Return Me._ClientMidname
		End Get
		Set
			If (String.Equals(Me._ClientMidname, value) = false) Then
				Me.OnClientMidnameChanging(value)
				Me.SendPropertyChanging
				Me._ClientMidname = value
				Me.SendPropertyChanged("ClientMidname")
				Me.OnClientMidnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientSex", DbType:="Bit")>  _
	Public Property ClientSex() As System.Nullable(Of Boolean)
		Get
			Return Me._ClientSex
		End Get
		Set
			If (Me._ClientSex.Equals(value) = false) Then
				Me.OnClientSexChanging(value)
				Me.SendPropertyChanging
				Me._ClientSex = value
				Me.SendPropertyChanged("ClientSex")
				Me.OnClientSexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientBirthday", DbType:="Date")>  _
	Public Property ClientBirthday() As System.Nullable(Of Date)
		Get
			Return Me._ClientBirthday
		End Get
		Set
			If (Me._ClientBirthday.Equals(value) = false) Then
				Me.OnClientBirthdayChanging(value)
				Me.SendPropertyChanging
				Me._ClientBirthday = value
				Me.SendPropertyChanged("ClientBirthday")
				Me.OnClientBirthdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientEmail", DbType:="NVarChar(255)")>  _
	Public Property ClientEmail() As String
		Get
			Return Me._ClientEmail
		End Get
		Set
			If (String.Equals(Me._ClientEmail, value) = false) Then
				Me.OnClientEmailChanging(value)
				Me.SendPropertyChanging
				Me._ClientEmail = value
				Me.SendPropertyChanged("ClientEmail")
				Me.OnClientEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientPhone", DbType:="NVarChar(100)")>  _
	Public Property ClientPhone() As String
		Get
			Return Me._ClientPhone
		End Get
		Set
			If (String.Equals(Me._ClientPhone, value) = false) Then
				Me.OnClientPhoneChanging(value)
				Me.SendPropertyChanging
				Me._ClientPhone = value
				Me.SendPropertyChanged("ClientPhone")
				Me.OnClientPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientAddress", DbType:="NVarChar(400)")>  _
	Public Property ClientAddress() As String
		Get
			Return Me._ClientAddress
		End Get
		Set
			If (String.Equals(Me._ClientAddress, value) = false) Then
				Me.OnClientAddressChanging(value)
				Me.SendPropertyChanging
				Me._ClientAddress = value
				Me.SendPropertyChanged("ClientAddress")
				Me.OnClientAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientPolisNum", DbType:="NVarChar(30)")>  _
	Public Property ClientPolisNum() As String
		Get
			Return Me._ClientPolisNum
		End Get
		Set
			If (String.Equals(Me._ClientPolisNum, value) = false) Then
				Me.OnClientPolisNumChanging(value)
				Me.SendPropertyChanging
				Me._ClientPolisNum = value
				Me.SendPropertyChanged("ClientPolisNum")
				Me.OnClientPolisNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientPolisOrg", DbType:="NVarChar(255)")>  _
	Public Property ClientPolisOrg() As String
		Get
			Return Me._ClientPolisOrg
		End Get
		Set
			If (String.Equals(Me._ClientPolisOrg, value) = false) Then
				Me.OnClientPolisOrgChanging(value)
				Me.SendPropertyChanging
				Me._ClientPolisOrg = value
				Me.SendPropertyChanged("ClientPolisOrg")
				Me.OnClientPolisOrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateTimeZapisi", DbType:="DateTime")>  _
	Public Property DateTimeZapisi() As System.Nullable(Of Date)
		Get
			Return Me._DateTimeZapisi
		End Get
		Set
			If (Me._DateTimeZapisi.Equals(value) = false) Then
				Me.OnDateTimeZapisiChanging(value)
				Me.SendPropertyChanging
				Me._DateTimeZapisi = value
				Me.SendPropertyChanged("DateTimeZapisi")
				Me.OnDateTimeZapisiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientKarta", DbType:="SmallInt")>  _
	Public Property ClientKarta() As System.Nullable(Of Short)
		Get
			Return Me._ClientKarta
		End Get
		Set
			If (Me._ClientKarta.Equals(value) = false) Then
				Me.OnClientKartaChanging(value)
				Me.SendPropertyChanging
				Me._ClientKarta = value
				Me.SendPropertyChanged("ClientKarta")
				Me.OnClientKartaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Accepted", DbType:="SmallInt")>  _
	Public Property Accepted() As System.Nullable(Of Short)
		Get
			Return Me._Accepted
		End Get
		Set
			If (Me._Accepted.Equals(value) = false) Then
				Me.OnAcceptedChanging(value)
				Me.SendPropertyChanging
				Me._Accepted = value
				Me.SendPropertyChanged("Accepted")
				Me.OnAcceptedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcceptedDateTime", DbType:="DateTime")>  _
	Public Property AcceptedDateTime() As System.Nullable(Of Date)
		Get
			Return Me._AcceptedDateTime
		End Get
		Set
			If (Me._AcceptedDateTime.Equals(value) = false) Then
				Me.OnAcceptedDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._AcceptedDateTime = value
				Me.SendPropertyChanged("AcceptedDateTime")
				Me.OnAcceptedDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcceptedText", DbType:="NVarChar(1000)")>  _
	Public Property AcceptedText() As String
		Get
			Return Me._AcceptedText
		End Get
		Set
			If (String.Equals(Me._AcceptedText, value) = false) Then
				Me.OnAcceptedTextChanging(value)
				Me.SendPropertyChanging
				Me._AcceptedText = value
				Me.SendPropertyChanged("AcceptedText")
				Me.OnAcceptedTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MessageToClientSent", DbType:="Bit")>  _
	Public Property MessageToClientSent() As System.Nullable(Of Boolean)
		Get
			Return Me._MessageToClientSent
		End Get
		Set
			If (Me._MessageToClientSent.Equals(value) = false) Then
				Me.OnMessageToClientSentChanging(value)
				Me.SendPropertyChanging
				Me._MessageToClientSent = value
				Me.SendPropertyChanged("MessageToClientSent")
				Me.OnMessageToClientSentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RNDCode", DbType:="NVarChar(6)")>  _
	Public Property RNDCode() As String
		Get
			Return Me._RNDCode
		End Get
		Set
			If (String.Equals(Me._RNDCode, value) = false) Then
				Me.OnRNDCodeChanging(value)
				Me.SendPropertyChanging
				Me._RNDCode = value
				Me.SendPropertyChanged("RNDCode")
				Me.OnRNDCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsedWCGAInt", DbType:="Bit")>  _
	Public Property UsedWCGAInt() As System.Nullable(Of Boolean)
		Get
			Return Me._UsedWCGAInt
		End Get
		Set
			If (Me._UsedWCGAInt.Equals(value) = false) Then
				Me.OnUsedWCGAIntChanging(value)
				Me.SendPropertyChanging
				Me._UsedWCGAInt = value
				Me.SendPropertyChanged("UsedWCGAInt")
				Me.OnUsedWCGAIntChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsedWCGAColourScheme", DbType:="Int")>  _
	Public Property UsedWCGAColourScheme() As System.Nullable(Of Integer)
		Get
			Return Me._UsedWCGAColourScheme
		End Get
		Set
			If (Me._UsedWCGAColourScheme.Equals(value) = false) Then
				Me.OnUsedWCGAColourSchemeChanging(value)
				Me.SendPropertyChanging
				Me._UsedWCGAColourScheme = value
				Me.SendPropertyChanged("UsedWCGAColourScheme")
				Me.OnUsedWCGAColourSchemeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_history", DbType:="NVarChar(255)")>  _
	Public Property history() As String
		Get
			Return Me._history
		End Get
		Set
			If (String.Equals(Me._history, value) = false) Then
				Me.OnhistoryChanging(value)
				Me.SendPropertyChanging
				Me._history = value
				Me.SendPropertyChanged("history")
				Me.OnhistoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vrach_Spec_ID_Talons", Storage:="_Vrach_Spec_ID", ThisKey:="VrachSpec_ID", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property Vrach_Spec_ID() As Vrach_Spec_ID
		Get
			Return Me._Vrach_Spec_ID.Entity
		End Get
		Set
			Dim previousValue As Vrach_Spec_ID = Me._Vrach_Spec_ID.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Vrach_Spec_ID.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Vrach_Spec_ID.Entity = Nothing
					previousValue.Talons.Remove(Me)
				End If
				Me._Vrach_Spec_ID.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Talons.Add(Me)
					Me._VrachSpec_ID = value.id
				Else
					Me._VrachSpec_ID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Vrach_Spec_ID")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vrach_Spec_ID")>  _
Partial Public Class Vrach_Spec_ID
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _IDVrach As Integer
	
	Private _IDSpec As Integer
	
	Private _IdOrg As System.Nullable(Of Integer)
	
	Private _Description As String
	
	Private _OsobennostPriema As String
	
	Private _Raspisanie As EntitySet(Of Raspisanie)
	
	Private _Talons As EntitySet(Of Talons)
	
	Private _Spec_Filial_ID As EntityRef(Of Spec_Filial_ID)
	
	Private _Vrach As EntityRef(Of Vrach)
	
    #Region "Определения метода расширяемости"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnIDVrachChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDVrachChanged()
    End Sub
    Partial Private Sub OnIDSpecChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSpecChanged()
    End Sub
    Partial Private Sub OnIdOrgChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdOrgChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnOsobennostPriemaChanging(value As String)
    End Sub
    Partial Private Sub OnOsobennostPriemaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Raspisanie = New EntitySet(Of Raspisanie)(AddressOf Me.attach_Raspisanie, AddressOf Me.detach_Raspisanie)
		Me._Talons = New EntitySet(Of Talons)(AddressOf Me.attach_Talons, AddressOf Me.detach_Talons)
		Me._Spec_Filial_ID = CType(Nothing, EntityRef(Of Spec_Filial_ID))
		Me._Vrach = CType(Nothing, EntityRef(Of Vrach))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDVrach", DbType:="Int NOT NULL")>  _
	Public Property IDVrach() As Integer
		Get
			Return Me._IDVrach
		End Get
		Set
			If ((Me._IDVrach = value)  _
						= false) Then
				If Me._Vrach.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDVrachChanging(value)
				Me.SendPropertyChanging
				Me._IDVrach = value
				Me.SendPropertyChanged("IDVrach")
				Me.OnIDVrachChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSpec", DbType:="Int NOT NULL")>  _
	Public Property IDSpec() As Integer
		Get
			Return Me._IDSpec
		End Get
		Set
			If ((Me._IDSpec = value)  _
						= false) Then
				If Me._Spec_Filial_ID.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDSpecChanging(value)
				Me.SendPropertyChanging
				Me._IDSpec = value
				Me.SendPropertyChanged("IDSpec")
				Me.OnIDSpecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdOrg", DbType:="Int")>  _
	Public Property IdOrg() As System.Nullable(Of Integer)
		Get
			Return Me._IdOrg
		End Get
		Set
			If (Me._IdOrg.Equals(value) = false) Then
				Me.OnIdOrgChanging(value)
				Me.SendPropertyChanging
				Me._IdOrg = value
				Me.SendPropertyChanged("IdOrg")
				Me.OnIdOrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(500)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OsobennostPriema", DbType:="NVarChar(500)")>  _
	Public Property OsobennostPriema() As String
		Get
			Return Me._OsobennostPriema
		End Get
		Set
			If (String.Equals(Me._OsobennostPriema, value) = false) Then
				Me.OnOsobennostPriemaChanging(value)
				Me.SendPropertyChanging
				Me._OsobennostPriema = value
				Me.SendPropertyChanged("OsobennostPriema")
				Me.OnOsobennostPriemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vrach_Spec_ID_Raspisanie", Storage:="_Raspisanie", ThisKey:="id", OtherKey:="ID_SPEC_VRACH")>  _
	Public Property Raspisanie() As EntitySet(Of Raspisanie)
		Get
			Return Me._Raspisanie
		End Get
		Set
			Me._Raspisanie.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vrach_Spec_ID_Talons", Storage:="_Talons", ThisKey:="id", OtherKey:="VrachSpec_ID")>  _
	Public Property Talons() As EntitySet(Of Talons)
		Get
			Return Me._Talons
		End Get
		Set
			Me._Talons.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Spec_Filial_ID_Vrach_Spec_ID", Storage:="_Spec_Filial_ID", ThisKey:="IDSpec", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property Spec_Filial_ID() As Spec_Filial_ID
		Get
			Return Me._Spec_Filial_ID.Entity
		End Get
		Set
			Dim previousValue As Spec_Filial_ID = Me._Spec_Filial_ID.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Spec_Filial_ID.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Spec_Filial_ID.Entity = Nothing
					previousValue.Vrach_Spec_ID.Remove(Me)
				End If
				Me._Spec_Filial_ID.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Vrach_Spec_ID.Add(Me)
					Me._IDSpec = value.id
				Else
					Me._IDSpec = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Spec_Filial_ID")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vrach_Vrach_Spec_ID", Storage:="_Vrach", ThisKey:="IDVrach", OtherKey:="id", IsForeignKey:=true)>  _
	Public Property Vrach() As Vrach
		Get
			Return Me._Vrach.Entity
		End Get
		Set
			Dim previousValue As Vrach = Me._Vrach.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Vrach.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Vrach.Entity = Nothing
					previousValue.Vrach_Spec_ID.Remove(Me)
				End If
				Me._Vrach.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Vrach_Spec_ID.Add(Me)
					Me._IDVrach = value.id
				Else
					Me._IDVrach = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Vrach")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Raspisanie(ByVal entity As Raspisanie)
		Me.SendPropertyChanging
		entity.Vrach_Spec_ID = Me
	End Sub
	
	Private Sub detach_Raspisanie(ByVal entity As Raspisanie)
		Me.SendPropertyChanging
		entity.Vrach_Spec_ID = Nothing
	End Sub
	
	Private Sub attach_Talons(ByVal entity As Talons)
		Me.SendPropertyChanging
		entity.Vrach_Spec_ID = Me
	End Sub
	
	Private Sub detach_Talons(ByVal entity As Talons)
		Me.SendPropertyChanging
		entity.Vrach_Spec_ID = Nothing
	End Sub
End Class
